---
title: "API Changes"
output: rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{API Changes}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE, 
  comment = "#>", 
  warning = FALSE,
  message = FALSE
)
```

## Summary of the API changes announced in 2021
 
In July of 2021 the Patentview API team announced upcoming API changes here https://patentsview.org/data-in-action/whats-new-patentsview-july-2021.  This page will explain the impact to the r package and any existing code.
 
The Patentsview API team has provided a Swagger UI page for the new version of the API at https://search.patentsview.org/swagger-ui/. It shows all the available endpoints and their responses.  Each field in the 200 response sections could be requested in the fields/f: parameter and each field is supposed to be queryable (usable in the query/q: parameter).  The Swagger UI page can be used to make requests, if you have an API key to enter in the authorization screen, more about the new API key below.  The Swagger UI definition at https://search.patentsview.org/static/openapi.json can be imported into Postman to give you a nicely loaded collection for the changed API. You'll just need to set a global variable PVIEW_KEY and set the authorization's value to {{PVIEW_KEY}} to your API key. 

## An API Key is required
Perhaps the most important change, without an API key your queries will be rejected.  Request an API key using this link: https://patentsview.org/apis/keyrequest  Once you have one, you'll need to set an environmental variable PATENTSVIEW_API_KEY to the value of your API key for the R package to use.

## Philosophical Changes
These changes are likely to break existing code.  Now there are more endpoints and each returns a smaller, more specific data structure pertinent to that endpoint. As an example, previously the inventor endpoint could return assignee information, it no longer does that.  The exception is the patents endpoint.  It now can return assignees, inventors, cpc_current along with patent specific fields. Note that now subsequent queries would have to be made to the USPC specific endpoints if you are looking for these fields.

Currently there are 23 endpoints, up from the original 7.  The urls changed slightly but the R package takes care of that for you.  

1. There are 15 totally new endpoints
   -  /api/v1/brf_sum_text/
   -  /api/v1/claim/
   -  /api/v1/detail_desc_text/
   -  /api/v1/draw_desc_text/
   -  /api/v1/ipc/
   -  /api/v1/uspc_subclass/
   -  /api/v1/patent/attorney/
   -  /api/v1/patent/foreign_citation/
   -  /api/v1/patent/otherreference/ (not currently working)
   -  /api/v1/patent/rel_app_text/
   -  /api/v1/patent/us_application_citation/ 
   -  /api/v1/patent/us_patent_citation/
   -  /api/v1/publication/rel_app_text/
   -  /api/v1/publications/
   -  /api/v1/wipo/
2. 5 of the original api's endpoints have singular names but lighter responses and fewer queryable fields as mentioned above.  
   -  /api/v1/assignee/
   -  /api/v1/inventor/
   -  /api/v1/location/
   -  /api/v1/patent/
   -  /api/v1/uspc_mainclass/
3. The original cpc endpoint has a new name and there are two new cpc endpoints
   -  /api/v1/cpc_class/
   -  /api/v1/cpc_subclass/
   -  /api/v1/cpc_group/
4. The nber_subcategory endpoint seems to be gone now.


## Data Reduction

Some fields seem to have gone away, raw inventor fields, coinventor fields, patent_firstnamed fields and patent_num_claims.  There's a link to a spreadsheet of the fields returned by endpoint at the bottom of https://patentsview.org/apis/purpose though the Swagger UI page should be more current.

## HATEOAS
Some of the returned fields are HATEOAS (Hypermedia as the Engine of Application State) links to retrieve more information about that field. Slightly funky is the cpc_current's cpc_group, returned by the patents endpoint.  Here the slash in the cpc is turned into a colon.  This is a peculiarity of two of the new convience urls that shouldn't be noticable in the r package, unless you are trying to infer the uspc and cpc values from the returned urls, without actually calling back for this data.
There is something slightly funky with these fields.  They have an _id when in the q:/query and f:/fields parameters but they are returned without the _id.  Example: cpc_group_id is returned as the HATEOAS link cpc_group. 

Example link returned by the patents endpoint
```
 "cpc_current": {
     "cpc_group": "https://search.patentsview.org/api/v1/cpc_group/G01S7:4865/"  
  }
```
Note that going to that link in a browser will result in a 403 Unauthorized, as no API key is sent.

There is a new method in the R package to retrive data from the HATEOAS links, just pass the returned
link and the R package will retrieve the data for you.  
```{r}
library(patentsview)

pv_data <- retrieve_linked_data("https://search.patentsview.org/api/v1/cpc_group/G01S7:4865/")
pv_data

if(pv_data$query_results$total_hits != 1){
   print("something is wrong with the API.  Response should match this:")
   query <- qry_funs$eq("cpc_group_id" = "G01S7/4865")
   search_pv(query, endpoint = "cpc_group")
}

```

## Throttling
The API will now allow 45 requests per minute, making more requests will anger the API.  It will send back an error code with a header indicating how many seconds to wait before sending more queries.  The R package will take care of this for you.  It will sleep for the required number of seconds before resubmitting your query, seemlessly to your script.

## Alpha Fields

fieldsdf will show you the field types, names and endpoints in the new version of the API.  There are different operators for string and full text fields.
```{r}
library(knitr)
library(dplyr)

string_fields <-
   fieldsdf %>%
      filter(data_type == "string")  %>%
      select(endpoint, field, data_type) %>%
      arrange(`endpoint`, `field`)  
 
kable(string_fields,  row.names = FALSE, caption = 'String Fields')

fulltext_fields <-
   fieldsdf %>%
      filter(data_type == "fulltext")  %>%
      select(endpoint, field, data_type) %>%
      arrange(endpoint, field)  
 
kable(fulltext_fields ,  row.names = FALSE, caption = 'Full Text Fields')

```

## Other Changes

* Some of the fields names changed.  assignee_last_name is now name_last in the assignees data structure.

* Some fields' types have changed, some strings in the original version of the API have become a full text field and some full text fields have becomes strings.  This means you'll need to use different methods
when including them in your query.  Example: assignee organization is renamed organization and is now a full text field, formerly it had been a string.

* The API's endpoints are now singular, instead of being plural.  Ex /patents is now /patent  The returned data structures are still plural, ex. patents.  

* All fields are supposed to be queryable with the new version of the API.

* The subdomain of the API changed from https://api.patentsview.org/ to https://search.patentsview.org.  The R package takes care of this for you.

* Nested fields seem to need to be fully qualified in the f:parameter. Here are all the patents endpoint's fields:
```{r}
sort(get_fields("patents"))
```
